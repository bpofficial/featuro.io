createFeature:
    handler: src/feature/create-feature/handler.createFeature
    events:
        - http:
              method: POST
              path: /api/v1/projects/{projectId}/features
              authorizer:
                  type: CUSTOM
                  authorizerId:
                      Fn::ImportValue: ${self:custom.serviceName}-ApiGatewayAuthorizerId-${self:custom.currentStage}

updateFeature:
    handler: src/feature/update-feature/handler.updateFeature
    events:
        - http:
              method: PUT
              path: /api/v1/projects/{projectId}/features/{featureId}
              authorizer:
                  type: CUSTOM
                  authorizerId:
                      Fn::ImportValue: ${self:custom.serviceName}-ApiGatewayAuthorizerId-${self:custom.currentStage}

deleteFeature:
    handler: src/feature/delete-feature/handler.deleteFeature
    events:
        - http:
              method: DELETE
              path: /api/v1/projects/{projectId}/features/{featureId}
              authorizer:
                  type: CUSTOM
                  authorizerId:
                      Fn::ImportValue: ${self:custom.serviceName}-ApiGatewayAuthorizerId-${self:custom.currentStage}

retrieveFeature:
    handler: src/feature/retrieve-feature/handler.retrieveFeature
    events:
        - http:
              method: GET
              path: /api/v1/projects/{projectId}/features/{featureId}
              authorizer:
                  type: CUSTOM
                  authorizerId:
                      Fn::ImportValue: ${self:custom.serviceName}-ApiGatewayAuthorizerId-${self:custom.currentStage}

evaluateFeature:
    handler: src/feature/eval-feature/handler.evaluateFeature
    events:
        - http:
              method: GET
              path: /api/v1/projects/{projectId}/features/{featureId}/evaluate

listFeature:
    handler: src/feature/list-feature/handler.listFeature
    events:
        - http:
              method: GET
              path: /api/v1/projects/{projectId}/features
              authorizer:
                  type: CUSTOM
                  authorizerId:
                      Fn::ImportValue: ${self:custom.serviceName}-ApiGatewayAuthorizerId-${self:custom.currentStage}
