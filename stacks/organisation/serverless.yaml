service: organisation

frameworkVersion: "3"

package:
    individually: false
    excludeDevDependencies: true

plugins:
    - serverless-prune-plugin
    - serverless-esbuild
    - serverless-offline-ssm
    - serverless-offline

custom:
    prune:
        automatic: true
        number: 1
    serviceName: organisation
    currentStage: ${opt:stage, 'organisation'}
    esbuild:
        bundle: true
        minify: true
        target: node16
        packager: yarn
        sourcemap: true
        sourcesContent: false
        plugins: esbuild.plugins.js
    serverless-offline-ssm:
        stages:
            - ${self:custom.serviceName}
        ssm:
            '/app/organisation/organisation/STRIPE_SECRET_KEY': ${env:STRIPE_SECRET_KEY}
            '/app/organisation/organisation/DB_URI': ${env:DB_URI}

provider:
    name: aws
    runtime: nodejs16.x
    region: ap-southeast-2
    memorySize: 128
    environment:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
        STRIPE_SECRET_KEY: ${ssm:/app/${self:custom.currentStage}/${self:custom.serviceName}/STRIPE_SECRET_KEY}
        DB_URI: ${ssm:/app/${self:custom.currentStage}/${self:custom.serviceName}/DB_URI}
    apiGateway:
        restApiId:
            'Fn::ImportValue': ${self:custom.serviceName}-ApiGatewayId-${self:custom.currentStage}
        restApiRootResourceId:
            'Fn::ImportValue': ${self:custom.serviceName}-ApiGatewayIdRootResourceId-${self:custom.currentStage}
        restApiResources:
            'organisations':
                Fn::ImportValue: ${self:custom.serviceName}-ApiPath-Organisations-${self:custom.currentStage}

functions:
  - ${file(./sls/routes/organisation.yaml)}
  
resources:
  - ${file(./sls/api.yaml)}
  - ${file(./sls/routes.yaml)}
  - ${file(./sls/outputs.yaml)}