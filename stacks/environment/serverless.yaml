service: environments

frameworkVersion: '3'

package:
    individually: false
    excludeDevDependencies: true

plugins:
    - serverless-prune-plugin
    - serverless-esbuild
    - serverless-offline-ssm
    - serverless-offline

custom:
    prune:
        automatic: true
        number: 1
    serviceName: environments
    currentStage: ${opt:stage, 'environments'}
    esbuild:
        bundle: true
        minify: false
        target: node16
        packager: yarn
        sourcemap: true
        sourcesContent: true
        plugins: esbuild.plugins.js
    serverless-offline:
        httpPort: 5000
        lambdaPort: 5001
    serverless-offline-ssm:
        stages:
            - ${self:custom.serviceName}
        ssm:
            '/app/environments/environments/DB_URI': ${env:DB_URI}
            
provider:
    name: aws
    runtime: nodejs16.x
    region: ap-southeast-2
    memorySize: 128
    environment:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    apiGateway:
        restApiId:
            'Fn::ImportValue': ${self:custom.serviceName}-ApiGatewayId-${self:custom.currentStage}
        restApiRootResourceId:
            'Fn::ImportValue': ${self:custom.serviceName}-ApiGatewayIdRootResourceId-${self:custom.currentStage}
        restApiResources:
            'projects':
                Fn::ImportValue: ${self:custom.serviceName}-ApiPath-Environments-${self:custom.currentStage}
            'projects/{projectId}':
                Fn::ImportValue: ${self:custom.serviceName}-ApiPath-EnvironmentById-${self:custom.currentStage}
            'projects/{projectId}/environments':
                Fn::ImportValue: ${self:custom.serviceName}-ApiPath-Environments-${self:custom.currentStage}
            'projects/{projectId}/environments/{environmentId}':
                Fn::ImportValue: ${self:custom.serviceName}-ApiPath-EnvironmentById-${self:custom.currentStage}

functions:
    - ${file(./sls/routes/environment.yaml)}

resources:
    - ${file(./sls/api.yaml)}
    - ${file(./sls/routes.yaml)}
    - ${file(./sls/outputs.yaml)}
